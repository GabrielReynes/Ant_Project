// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

int width, height;

float decay_rate;
float blur_rate;

float delta_time;

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x < 0 || id.x >= (uint)width || id.y < 0 || id.y >= (uint)height) return;

    float4 color = Result[id.xy];
    float4 sum = 0;

    for (int i = -1; i <= 1; i++)
        for (int j = -1; j <= 1; j++)
            sum += Result[int2(id.x + i, id.y + j)];
    
    sum /= 9;
    
    float4 newColor = color * (1 - blur_rate) + sum * blur_rate;
    newColor -= decay_rate * delta_time;
    
    Result[id.xy] = max(0, newColor);
}
